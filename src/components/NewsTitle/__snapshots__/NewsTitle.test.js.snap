// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewsTitle
    article={
      Object {
        "source": "npr.org",
        "title": "Name",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <article
        className="article"
      >
        <img
          alt=""
          className="article-image"
          height="50%"
          width="50%"
        />
        <div
          className="article-container"
        >
          <h3
            className="article-title"
          >
            Name
          </h3>
          <p
            className="article-source"
          />
        </div>
      </article>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt=""
            className="article-image"
            height="50%"
            width="50%"
          />,
          <div
            className="article-container"
          >
            <h3
              className="article-title"
            >
              Name
            </h3>
            <p
              className="article-source"
            />
          </div>,
        ],
        "className": "article",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "article-image",
            "height": "50%",
            "src": undefined,
            "width": "50%",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="article-title"
              >
                Name
              </h3>,
              <p
                className="article-source"
              />,
            ],
            "className": "article-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Name",
                "className": "article-title",
              },
              "ref": null,
              "rendered": "Name",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "article-source",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "article",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <article
          className="article"
        >
          <img
            alt=""
            className="article-image"
            height="50%"
            width="50%"
          />
          <div
            className="article-container"
          >
            <h3
              className="article-title"
            >
              Name
            </h3>
            <p
              className="article-source"
            />
          </div>
        </article>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt=""
              className="article-image"
              height="50%"
              width="50%"
            />,
            <div
              className="article-container"
            >
              <h3
                className="article-title"
              >
                Name
              </h3>
              <p
                className="article-source"
              />
            </div>,
          ],
          "className": "article",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "article-image",
              "height": "50%",
              "src": undefined,
              "width": "50%",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="article-title"
                >
                  Name
                </h3>,
                <p
                  className="article-source"
                />,
              ],
              "className": "article-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Name",
                  "className": "article-title",
                },
                "ref": null,
                "rendered": "Name",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "article-source",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
            ],
            "type": "div",
          },
        ],
        "type": "article",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
